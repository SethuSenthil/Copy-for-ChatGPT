(async function () {
  console.log('%cCopyGPT (Copy For ChatGPT Extension) Loaded', 'color: green; font-size: 30px');
  const currentYear = new Date().getFullYear()
  console.log(`
  - 🔘 Copy Button: Enabled ✅
  - ⌨️ CMD+K Hotkey: Enabled ✅
  - ↕️ Up Arrow Key: Enabled ✅
  - 🧼 Anti-Formatter: Enabled ✅
  - ✨ AI plagiarism checker: Enabled ✅

  Copyright (c) ${currentYear} Sethu Senthil
  Version: 0.3.10
  https://copygpt.sethusenthil.com
  https://sethusenthil.com
  `)

  const USER_TEXT_SELECTOR = '.items-start';
  const CHAT_TEXT_SELECTOR = '.markdown';
  const CLIPBOARD_CLASS_NAME = 'copy-to-clipboard';


  const showSnackbar = (message, position) => {
    const snack = document.createElement('div');
    snack.classList.add('snackbar');

    if (position) {
      //default position is bottom
      snack.classList.add(position);
    } else {
      snack.classList.add('bottom');
    }

    snack.innerText = message;
    document.body.appendChild(snack);
    snack.classList.add('show');
    setTimeout(function () {
      snack.className = snack.className.replace("show", "");
      snack.remove();
    }, 3000);
  };

  chrome.runtime.onMessage.addListener(function (responses, sender, sendResponse) {
    //console.log('response', responses);

    let avgScore = 0;

    responses.message.forEach((response) => {
      avgScore += response[0].score;
    });

    avgScore = avgScore / responses.length;

    if (avgScore <= 0.50) {
      showSnackbar('This text was flagged as AI generated by plagiarism detectors, make some changes before submitting! 🚨', 'top');
    } else {
      showSnackbar('Your text was not flagged by AI detectors! ✅', 'top');
    }

  });

  const copyToClipboard = (str) => {
    //send to AI plagiarism detector in background.js
    chrome.runtime.sendMessage({ message: str });

    navigator.clipboard.writeText(str).then(function () {
      //console.log('Async: Copying to clipboard was successful!');
    }, function (err) {
      console.error('Async: Could not copy text: ', err);
    });

    //copy notification
    showSnackbar('Copied to clipboard 📋');
  };

  document.addEventListener('copy', (event) => {
    //get copied selection and sterilize
    const selection = document.getSelection().toString();

    //send to AI plagiarism detector in background.js
    chrome.runtime.sendMessage({ message: selection });

    //copy it to clipboard
    event.clipboardData.setData('text/plain', selection);

    //prevent default copy behavior, without this line it will not work!
    event.preventDefault();

    //copy notification
    showSnackbar('Copied to clipboard 📋');
  });

  const intervalId = window.setInterval(async function () {
    //GPT Credits Setter
    if (!document.querySelector('#copygpt-credits')) {
      var textCenterElement = document.querySelector('.text-center');

      textCenterElement = textCenterElement ?? document.querySelector('.text-center.text-xs');

      textCenterElement.insertAdjacentHTML('beforeend', '&nbsp; ✨ <a class="underline" id="copygpt-credits" target="_blank" href="https://copygpt.sethusenthil.com/?ref=gptFooter"> Enhanced by CopyGPT</a>')
    }

    const chatContainer = document.querySelector('main');

    //console.log('probing for new chat bubbles');
    const chatbubbles = chatContainer.querySelectorAll('main.w-full .border-b');
    //console.log('chatbubbles', chatbubbles);

    //check if it is a plus user
    var plusUser = (chatbubbles.length % 2 === 0) ? false : true;

    chatbubbles.forEach((chatbox, i) => {
      //console.log('chatbox', chatbox);
      //first chat box needs to be from user, hence all the even chat bubbles are from bot
      //plus users will have the first row as model selection
      let text_selector;
      if ((i > 0 && (i % 2 === 0) && plusUser) ||
        ((i + 1) % 2 === 0 && !plusUser)) {
        text_selector = CHAT_TEXT_SELECTOR;
      } else if ((i > 0 && (i % 2 === 1) && plusUser) ||
      ((i + 1) % 2 === 1 && !plusUser)) {
        text_selector = USER_TEXT_SELECTOR;
      } else {
        text_selector = undefined;
      }
      if (text_selector !== undefined) {
        //it is a chat box from bot
        const addAfter = chatbox.querySelector(text_selector);

        if (chatbox.querySelector(`.${CLIPBOARD_CLASS_NAME}`) === null) {

          //TODO: to check if ChatGPT is done typing check .result-streaming class exists in chatbox

          addAfter.insertAdjacentHTML('afterend', `<div style="display: flex; align-items: center; color: lightslategray;" class="copy-to-clipboard">
          <p>Copy to Clipboard</p> <img src="https://copygpt.sethusenthil.com/cdn/clipboard-emoji.webp" alt="clipboard emoji" class="emoji"/>
          </div>`);
          chatbox.querySelector(`.${CLIPBOARD_CLASS_NAME}`).addEventListener('click', function () {

            const text = chatbox.querySelector(text_selector).innerText;
            copyToClipboard(text);

          });
        }
      }
    });

    if (chatContainer.getAttribute('listener-injected') !== 'true') {

      //console.log('setting event listener cause its not already there')
      document.addEventListener('keydown', function (event) {
        const chatContainer = document.querySelector('.flex .flex-col .items-center');

        // check for CTRL+K on Windows or CMD+K on Mac
        if ((event.ctrlKey || event.metaKey) && event.keyCode === 75) {
          //console.log('Copy Shortcut Pressed');

          const chatbubbles = chatContainer.querySelectorAll('main.w-full .border-b');

          //check if it is a plus user
          var plusUser = (chatbubbles.length % 2 === 0) ? false : true;

          if (((chatbubbles.length % 2 === 0) && !plusUser) ||
            ((chatbubbles.length % 2 === 1) && plusUser)) {
            //if last chat is from bot
            const lastChatBubble = chatbubbles[chatbubbles.length - 1];
            const text = lastChatBubble.querySelector(CHAT_TEXT_SELECTOR).innerText
            copyToClipboard(text);
          }

        }
        chatContainer.setAttribute('listener-injected', 'true');
      });

      const textarea = document.querySelector('textarea');

      textarea.addEventListener('keydown', function (event) {
        if (event.key === 'ArrowUp') {
          if (chatbubbles.length > 0) {
            let lastSetIndex = chatContainer.getAttribute('last-set-index') ?? 0;
            //console.log('lastSetIndex', lastSetIndex);

            if (lastSetIndex >= chatbubbles.length) {
              lastSetIndex = 0;
            }

            lastSetIndex++;

            const lastChatBubble = chatbubbles[chatbubbles.length - lastSetIndex];
            const text = lastChatBubble.innerText

            textarea.value = text;
            chatContainer.setAttribute('last-set-index', lastSetIndex);
          }
        }
      });
    }
  }, 1000);

})();