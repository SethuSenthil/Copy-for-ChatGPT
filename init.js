(async function () {
  console.log('%cCopyGPT (Copy For ChatGPT Extension) Loaded', 'color: green; font-size: 30px');
  const currentYear = new Date().getFullYear()
  console.log(`
  - Copy Button: Enabled âœ…
  - CTRL/CMD+K Hotkey: Enabled âœ…
  - CTRL/CMD+Up/Down Arrow Key: Enabled âœ…
  - âœ¨ AI plagiarism checker: Enabled âœ…

  Copyright (c) ${currentYear} Sethu Senthil / Daniel Liedke
  Version: 0.4.1
  https://copygpt.sethusenthil.com
  https://sethusenthil.com
  `)

  const CHAT_TEXT_SELECTOR = '.markdown';
  var copyUserPromptToClipboard = false;

  const showSnackbar = (message, position) => {
    const snack = document.createElement('div');
    snack.classList.add('snackbar');

    if (position) {
      //default position is bottom
      snack.classList.add(position);
    } else {
      snack.classList.add('bottom');
    }

    snack.innerText = message;
    document.body.appendChild(snack);
    snack.classList.add('show');
    setTimeout(function () {
      snack.className = snack.className.replace("show", "");
      snack.remove();
    }, 3000);
  };

  chrome.runtime.onMessage.addListener(function (response, sender, sendResponse) {
    
    if (response.message.documents[0].average_generated_prob >= 0.5) {
      showSnackbar('This text was flagged as AI generated by plagiarism detectors, make some changes before submitting! ðŸš¨', 'top');
    } else {
      showSnackbar('Your text was not flagged by AI detectors! âœ…', 'top');
    }
  });

  const copyToClipboard = (str) => {
    chrome.runtime.sendMessage({ message: str });

    navigator.clipboard.writeText(str).then(function () {
      
    }, function (err) {
      console.error('Async: Could not copy text: ', err);
    });
    showSnackbar('Copied to clipboard ðŸ“‹');
  };


  const intervalId = window.setInterval(async function () {

    if (!document.querySelector('#copygpt-credits')) {
        var textCenterElement = document.querySelector('.text-center');
        if (textCenterElement == null) {
          textCenterElement = document.querySelector('.text-center.text-xs');
        }
      if (textCenterElement !== null) {
      textCenterElement.insertAdjacentHTML('beforeend', '&nbsp; âœ¨ <a class="underline" id="copygpt-credits" target="_blank" href="https://copygpt.sethusenthil.com/?ref=gptFooter"> Enhanced by CopyGPT</a>');
      }
    }

    // Find element with class h-4 w-4 mr-1
    const sendMessageButton = document.querySelector('.h-4.w-4.mr-1');
  
    // If sendMessageButton is not found return
    if (sendMessageButton === null) {
      return;
    }       

    // If chat container is not found return
    const chatContainer = document.querySelector('.h-full.dark\\:bg-gray-800');
    if (chatContainer===null) {
      return;
    }

    const chatbubbles = chatContainer.querySelectorAll('.flex .flex-grow .flex-col');
    
    //check if copyUserPromptToClipboard is enabled
    chrome.storage.sync.get('copyUserPromptToClipboard', function(settings) {
      if (settings.copyUserPromptToClipboard) {
      copyUserPromptToClipboard = true;
      }
    });
          
    chatbubbles.forEach((chatbox, i) => {
    {
        var text;
      
        if (chatbox.parentElement.querySelector('.copy-to-clipboard') === null && (!(!copyUserPromptToClipboard && i % 2 === 0))) {

            chatbox.insertAdjacentHTML('afterend', `<div style="display: flex; align-items: center; color: lightslategray;" class="copy-to-clipboard">
            <p>Copy to Clipboard</p> <img src="https://copygpt.sethusenthil.com/cdn/clipboard-emoji.webp" alt="clipboard emoji" class="emoji"/>
            </div>`);
            chatbox.parentElement.querySelector('.copy-to-clipboard').addEventListener('click', function () {
        
                  text = chatbox.innerText;
                  copyToClipboard(text);

                });
            }
          }
    });

    if (chatContainer.getAttribute('listener-injected') !== 'true') {

      document.addEventListener('keydown', function (event) {
        const chatContainer = document.querySelector('.h-full.dark\\:bg-gray-800');
        if (chatContainer===null) {
          return;
        }

        // check for CTRL+K on Windows or CMD+K on Mac
        if ((event.ctrlKey || event.metaKey) && event.keyCode === 75) {

          const chatbubbles = chatContainer.querySelectorAll('.flex .flex-grow .flex-col');

          if (chatbubbles.length % 2 === 0) {

            //if last chat is from bot
            const lastChatBubble = chatbubbles[chatbubbles.length - 1];
            const text = lastChatBubble.querySelector(CHAT_TEXT_SELECTOR).innerText
            copyToClipboard(text);
          }

        }
        chatContainer.setAttribute('listener-injected', 'true');
      });

      const textarea = document.querySelector('textarea');

    if (textarea!==null && textarea.getAttribute('listener-injected') !== 'true') {
      textarea.setAttribute('listener-injected', 'true');
      textarea.addEventListener('keydown', function (event) {

      // CTRL+UP or CMD+UP to navigate through user previous prompts
      if ((event.ctrlKey || event.metaKey) && (event.key === 'ArrowUp' || event.key === 'ArrowDown')) {
      
        const chatContainer = document.querySelector('.h-full.dark\\:bg-gray-800');
        if (chatContainer===null) {
          return;
        }

        const chatbubbles = chatContainer.querySelectorAll('.flex .flex-grow .flex-col');
        
        if (chatbubbles.length > 0) {
          
          let lastSetIndex = +chatContainer.getAttribute('last-set-index') ?? chatbubbles.length;
                    
          if (event.key === 'ArrowUp') {
            lastSetIndex = lastSetIndex -2;
            
            if (lastSetIndex < 0) {
              lastSetIndex = chatbubbles.length-2;
            }
          }
          
          if (event.key === 'ArrowDown') {
            lastSetIndex = lastSetIndex + 2;
            
            if (lastSetIndex >= chatbubbles.length) {
              lastSetIndex = 0;
            }
          }

          const lastChatBubble = chatbubbles[lastSetIndex];
          var text = lastChatBubble.innerText

          text = text.replace('\n\nCopy to Clipboard','');
          textarea.value = text;
          
          // Expand the textarea if prompt is multiline otherwise keeps default size
          if (text.includes('\n')) {
            textarea.setAttribute('style','max-height: 200px; height: 264px;');
          } else {
            textarea.setAttribute('style', 'max-height: 200px; height: 24px; overflow-y: hidden;');
          }
          
          chatContainer.setAttribute('last-set-index', lastSetIndex);
        }
      }
      });
    }
  }
  
  }, 2000);

})();